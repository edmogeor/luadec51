name: Build Universal luadec51

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-universal:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Install dependencies
      run: |
        brew install cmake
        
    - name: Download and setup Lua 5.1.5
      run: |
        curl -L -o lua-5.1.5.tar.gz https://www.lua.org/ftp/lua-5.1.5.tar.gz
        tar -xzf lua-5.1.5.tar.gz
        cp -r lua-5.1.5/* lua/
        rm -rf lua-5.1.5 lua-5.1.5.tar.gz
        
    - name: Verify CMakeLists.txt
      run: |
        echo "Checking CMakeLists.txt content:"
        head -5 CMakeLists.txt
        
    - name: Configure CMake for x86_64
      run: |
        mkdir build-x86_64
        cd build-x86_64
        cmake .. -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_BUILD_TYPE=Release
        
    - name: Build x86_64 version
      run: |
        cd build-x86_64
        make
        echo "Contents of build-x86_64:"
        find . -name "luadec" -type f
        echo "Full directory listing:"
        find . -type f -name "luadec*"
        # The binary might be in a subdirectory like luadec/luadec
        if [ -f luadec/luadec ]; then
          echo "Found luadec in subdirectory"
          file luadec/luadec
          cp luadec/luadec ../luadec_x86_64
        elif [ -f luadec ]; then
          echo "Found luadec in root"
          file luadec
          cp luadec ../luadec_x86_64
        else
          echo "Error: luadec binary not found"
          exit 1
        fi
        
    - name: Configure CMake for ARM64
      run: |
        mkdir build-arm64
        cd build-arm64
        cmake .. -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_BUILD_TYPE=Release
        
    - name: Build ARM64 version
      run: |
        cd build-arm64
        make
        echo "Contents of build-arm64:"
        find . -name "luadec" -type f
        echo "Full directory listing:"
        find . -type f -name "luadec*"
        # The binary might be in a subdirectory like luadec/luadec
        if [ -f luadec/luadec ]; then
          echo "Found luadec in subdirectory"
          file luadec/luadec
          cp luadec/luadec ../luadec_arm64
        elif [ -f luadec ]; then
          echo "Found luadec in root"
          file luadec
          cp luadec ../luadec_arm64
        else
          echo "Error: luadec binary not found"
          exit 1
        fi
        
    - name: Verify architectures
      run: |
        echo "x86_64 binary:"
        file luadec_x86_64
        lipo -archs luadec_x86_64
        echo "ARM64 binary:"
        file luadec_arm64
        lipo -archs luadec_arm64
        
    - name: Create universal binary
      run: |
        lipo -create luadec_x86_64 luadec_arm64 -output luadec_universal
        echo "Universal binary:"
        file luadec_universal
        lipo -archs luadec_universal
        
    - name: Test universal binary
      run: |
        ./luadec_universal --help || echo "Help command completed (exit code: $?)"
        
    - name: Upload universal binary
      uses: actions/upload-artifact@v4
      with:
        name: luadec51-universal-binary
        path: luadec_universal
        retention-days: 30
        
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: luadec_universal
        name: luadec51 Universal Binary ${{ github.ref_name }}
        body: |
          Universal binary for luadec51 that works on both Intel and Apple Silicon Macs.
          
          ## Usage
          ```bash
          ./luadec_universal input.luac > output.lua
          ```
          
          ## Features
          - Intel x86_64 and Apple Silicon ARM64 support
          - Lua 5.1.x decompilation
          - Built-in disassembler
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}